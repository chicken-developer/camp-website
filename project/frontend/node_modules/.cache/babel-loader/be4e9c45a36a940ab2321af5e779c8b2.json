{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport noop from '@atlaskit/ds-lib/noop';\nimport Portal from '@atlaskit/portal';\nimport { layers } from '@atlaskit/theme/constants';\nimport useModalStack from '../hooks/use-modal-stack';\nimport Modal from './modal';\nexport default function ModalWrapper(_ref) {\n  var _ref$autoFocus = _ref.autoFocus,\n      autoFocus = _ref$autoFocus === void 0 ? true : _ref$autoFocus,\n      _ref$scrollBehavior = _ref.scrollBehavior,\n      scrollBehavior = _ref$scrollBehavior === void 0 ? 'inside' : _ref$scrollBehavior,\n      _ref$shouldCloseOnEsc = _ref.shouldCloseOnEscapePress,\n      shouldCloseOnEscapePress = _ref$shouldCloseOnEsc === void 0 ? true : _ref$shouldCloseOnEsc,\n      _ref$shouldCloseOnOve = _ref.shouldCloseOnOverlayClick,\n      shouldCloseOnOverlayClick = _ref$shouldCloseOnOve === void 0 ? true : _ref$shouldCloseOnOve,\n      _ref$isChromeless = _ref.isChromeless,\n      isChromeless = _ref$isChromeless === void 0 ? false : _ref$isChromeless,\n      _ref$width = _ref.width,\n      width = _ref$width === void 0 ? 'medium' : _ref$width,\n      _ref$isHeadingMultili = _ref.isHeadingMultiline,\n      isHeadingMultiline = _ref$isHeadingMultili === void 0 ? true : _ref$isHeadingMultili,\n      _ref$onClose = _ref.onClose,\n      onClose = _ref$onClose === void 0 ? noop : _ref$onClose,\n      stackIndexOverride = _ref.stackIndex,\n      _ref$onStackChange = _ref.onStackChange,\n      onStackChange = _ref$onStackChange === void 0 ? noop : _ref$onStackChange,\n      children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"autoFocus\", \"scrollBehavior\", \"shouldCloseOnEscapePress\", \"shouldCloseOnOverlayClick\", \"isChromeless\", \"width\", \"isHeadingMultiline\", \"onClose\", \"stackIndex\", \"onStackChange\", \"children\"]);\n\n  var stackIndex = useModalStack({\n    onStackChange: onStackChange\n  });\n  return (\n    /*#__PURE__*/\n    React.createElement(Portal, {\n      zIndex: layers.modal()\n    },\n    /*#__PURE__*/\n    React.createElement(Modal, _extends({}, props, {\n      autoFocus: autoFocus,\n      scrollBehavior: scrollBehavior,\n      shouldCloseOnEscapePress: shouldCloseOnEscapePress,\n      shouldCloseOnOverlayClick: shouldCloseOnOverlayClick,\n      isChromeless: isChromeless,\n      width: width,\n      isHeadingMultiline: isHeadingMultiline,\n      onClose: onClose,\n      stackIndex: stackIndexOverride || stackIndex\n    }), children))\n  );\n}","map":null,"metadata":{},"sourceType":"module"}