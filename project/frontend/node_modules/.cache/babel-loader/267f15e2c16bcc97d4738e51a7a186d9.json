{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n/** @jsx jsx */\n\nimport React from 'react';\nimport { jsx } from '@emotion/core';\nimport Button from '@atlaskit/button/custom-theme-button';\nimport { internalFooterStyles } from '../styles/content';\nexport default function ModalFooter(props) {\n  var actions = props.actions,\n      appearance = props.appearance,\n      component = props.component,\n      onClose = props.onClose,\n      testId = props.testId;\n  var warning = 'You can provide `component` OR `actions`, not both.';\n\n  if (!component && !actions) {\n    return null;\n  }\n\n  if (component && actions) {\n    console.warn(warning); // eslint-disable-line no-console\n\n    return null;\n  }\n\n  if (component) {\n    return (\n      /*#__PURE__*/\n      React.createElement(component, {\n        appearance: appearance,\n        onClose: onClose\n      })\n    );\n  }\n\n  return jsx(\"div\", {\n    css: internalFooterStyles,\n    \"data-testid\": testId && \"\".concat(testId, \"--footer\")\n  }, actions && actions.map(function (_ref, index) {\n    var text = _ref.text,\n        rest = _objectWithoutProperties(_ref, [\"text\"]);\n\n    return jsx(Button, _extends({\n      key: index,\n      appearance: index !== 0 ? 'subtle' : appearance || 'primary',\n      \"data-ds--modal-dialog--action\": true,\n      testId: testId && \"\".concat(testId, \"--action-\").concat(index)\n    }, rest), text);\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}