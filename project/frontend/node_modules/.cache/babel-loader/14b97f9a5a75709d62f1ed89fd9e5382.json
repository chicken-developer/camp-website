{"ast":null,"code":"/** @jsx jsx */\nimport React from 'react';\nimport { jsx } from '@emotion/core';\nimport ScrollLock from 'react-scrolllock';\nimport warnOnce from '@atlaskit/ds-lib/warn-once';\nimport { bodyStyles, wrapperStyles } from '../styles/content';\nimport Footer from './footer';\nimport Header from './header';\nimport ScrollContainer from './scroll-container';\nvar emptyObject = {};\nexport default function Content(props) {\n  var actions = props.actions,\n      appearance = props.appearance,\n      DeprecatedBody = props.body,\n      children = props.children,\n      _props$components = props.components,\n      components = _props$components === void 0 ? emptyObject : _props$components,\n      footer = props.footer,\n      header = props.header,\n      heading = props.heading,\n      isChromeless = props.isChromeless,\n      isHeadingMultiline = props.isHeadingMultiline,\n      onClose = props.onClose,\n      shouldScroll = props.shouldScroll,\n      testId = props.testId,\n      headingId = props.headingId,\n      stackIndex = props.stackIndex;\n  var _components$Container = components.Container,\n      Container = _components$Container === void 0 ? 'div' : _components$Container,\n      CustomBody = components.Body;\n  var Body = CustomBody || DeprecatedBody || 'div';\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (header) {\n      warnOnce(\"@atlaskit/modal-dialog: Deprecation warning - Use of the header prop in ModalDialog is deprecated. Please compose your ModalDialog using the 'components' prop instead\");\n    }\n\n    if (footer) {\n      warnOnce(\"@atlaskit/modal-dialog: Deprecation warning - Use of the footer prop in ModalDialog is deprecated. Please compose your ModalDialog using the 'components' prop instead\");\n    }\n\n    if (DeprecatedBody) {\n      warnOnce(\"@atlaskit/modal-dialog: Deprecation warning - Use of the body prop in ModalDialog is deprecated. Please compose your ModalDialog using the 'components' prop instead\");\n    }\n  }\n\n  return jsx(Container, {\n    css: wrapperStyles,\n    \"data-modal-stack\": stackIndex,\n    \"data-testid\": testId\n  }, isChromeless ? children : jsx(React.Fragment, null, jsx(Header, {\n    id: headingId,\n    appearance: appearance,\n    component: components.Header ? components.Header : header,\n    heading: heading,\n    onClose: onClose,\n    isHeadingMultiline: isHeadingMultiline,\n    testId: testId\n  }), jsx(ScrollLock, null, jsx(ScrollContainer, {\n    shouldScroll: shouldScroll,\n    testId: testId\n  }, jsx(Body, {\n    css: bodyStyles,\n    \"data-testid\": testId && \"\".concat(testId, \"--body\")\n  }, children))), jsx(Footer, {\n    actions: actions,\n    appearance: appearance,\n    component: components.Footer ? components.Footer : footer,\n    onClose: onClose,\n    testId: testId\n  })));\n}","map":null,"metadata":{},"sourceType":"module"}