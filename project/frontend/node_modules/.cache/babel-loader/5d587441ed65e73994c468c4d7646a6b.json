{"ast":null,"code":"import _typeof from \"@babel/runtime/helpers/typeof\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar AnalyticsEvent =\n/*#__PURE__*/\nfunction () {\n  function AnalyticsEvent(props) {\n    var _this = this;\n\n    _classCallCheck(this, AnalyticsEvent);\n\n    _defineProperty(this, \"clone\", function () {\n      // just a shallow clone, don't change sub refs unless you want to\n      // affect the original's too\n      var payload = _objectSpread({}, _this.payload);\n\n      return new AnalyticsEvent({\n        payload: payload\n      });\n    });\n\n    this.payload = props.payload;\n  }\n\n  _createClass(AnalyticsEvent, [{\n    key: \"update\",\n    value: function update(updater) {\n      if (typeof updater === 'function') {\n        this.payload = updater(this.payload);\n      }\n\n      if (_typeof(updater) === 'object') {\n        this.payload = _objectSpread(_objectSpread({}, this.payload), updater);\n      }\n\n      return this;\n    }\n  }]);\n\n  return AnalyticsEvent;\n}();\n\nexport { AnalyticsEvent as default };","map":null,"metadata":{},"sourceType":"module"}