{"ast":null,"code":"import { useCallback, useRef } from 'react';\nimport useDocumentEvent from './use-document-event';\n/**\n * Calls back when the escape key is pressed.\n * To be used exclusively for closing layered components.\n * Use the `isDisabled` argument to ignore closing events.\n *\n * ```js\n * useCloseOnEscapePress({\n *   onClose: () => {},\n *   isDisabled: false,\n * });\n * ```\n */\n\nexport default function useCloseOnEscapePress(_ref) {\n  var onClose = _ref.onClose,\n      isDisabled = _ref.isDisabled;\n  var escapePressed = useRef(false);\n  var onKeyDown = useCallback(function (e) {\n    if (isDisabled || escapePressed.current || e.key !== 'Escape') {\n      // We're either already handling the key down event or it's not escape.\n      // Bail early!\n      return;\n    }\n\n    escapePressed.current = true;\n    onClose(e);\n  }, [onClose, isDisabled]);\n  var onKeyUp = useCallback(function () {\n    escapePressed.current = false;\n  }, []);\n  useDocumentEvent('keydown', onKeyDown, false);\n  useDocumentEvent('keyup', onKeyUp, false);\n}","map":null,"metadata":{},"sourceType":"module"}