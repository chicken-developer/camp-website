{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { default as AnalyticsReactContext } from '@atlaskit/analytics-next-stable-react-context';\nvar ContextTypes = {\n  getAtlaskitAnalyticsContext: PropTypes.func,\n  getAtlaskitAnalyticsEventHandlers: PropTypes.func\n};\n\nvar noop = function noop() {\n  return [];\n}; // eslint-disable-next-line @repo/internal/react/no-class-components\n\n\nvar AnalyticsContext =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AnalyticsContext, _Component);\n\n  var _super = _createSuper(AnalyticsContext);\n\n  function AnalyticsContext(props) {\n    var _this;\n\n    _classCallCheck(this, AnalyticsContext);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"getChildContext\", function () {\n      return {\n        getAtlaskitAnalyticsContext: _this.getAnalyticsContext\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getAnalyticsContext\", function () {\n      var data = _this.props.data;\n      var _this$context$getAtla = _this.context.getAtlaskitAnalyticsContext,\n          getAtlaskitAnalyticsContext = _this$context$getAtla === void 0 ? noop : _this$context$getAtla;\n      return [].concat(_toConsumableArray(getAtlaskitAnalyticsContext()), [data]);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getAnalyticsEventHandlers\", function () {\n      var _this$context$getAtla2 = _this.context.getAtlaskitAnalyticsEventHandlers,\n          getAtlaskitAnalyticsEventHandlers = _this$context$getAtla2 === void 0 ? noop : _this$context$getAtla2;\n      return getAtlaskitAnalyticsEventHandlers();\n    });\n\n    _this.contextValue = {\n      getAtlaskitAnalyticsContext: _this.getAnalyticsContext,\n      getAtlaskitAnalyticsEventHandlers: _this.getAnalyticsEventHandlers\n    };\n    return _this;\n  }\n\n  _createClass(AnalyticsContext, [{\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return (\n        /*#__PURE__*/\n        React.createElement(AnalyticsReactContext.Provider, {\n          value: this.contextValue\n        }, children)\n      );\n    }\n  }]);\n\n  return AnalyticsContext;\n}(Component);\n\n_defineProperty(AnalyticsContext, \"contextTypes\", ContextTypes);\n\n_defineProperty(AnalyticsContext, \"childContextTypes\", ContextTypes);\n\nexport default AnalyticsContext;","map":null,"metadata":{},"sourceType":"module"}