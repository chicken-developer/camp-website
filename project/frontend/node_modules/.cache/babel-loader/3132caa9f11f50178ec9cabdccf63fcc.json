{"ast":null,"code":"import { portalClassName, portalParentClassName, portalParentSelector, portalSelector } from '../constants';\n/**\n * Creates a new portal container element with provided z-index and class name 'atlaskit-portal'\n * @param {number | string} zIndex - the z-index value of the newly created portal container element\n * @return {number} - The newly created container element\n */\n\nexport var createContainer = function createContainer(zIndex) {\n  var container = document.createElement('div');\n  container.className = portalClassName;\n  container.style.zIndex = \"\".concat(zIndex);\n  return container;\n};\n/**\n * Returns document body element\n * @return {number} - The document body element\n */\n\nvar getBody = function getBody() {\n  return document.body;\n};\n/**\n * Returns portal parent container. If no container exists already then it creates a new container with class name 'atlaskit-portal-container'\n * @return {Element} - The portal parent container div element\n */\n\n\nvar getPortalParent = function getPortalParent() {\n  var parentElement = document.querySelector(portalParentSelector);\n\n  if (!parentElement) {\n    var parent = document.createElement('div');\n    parent.className = portalParentClassName; // we are setting display to flex because we want each portal to create a new stacking context\n    // See https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context\n\n    parent.style.display = 'flex';\n    getBody().appendChild(parent);\n    return parent;\n  }\n\n  return parentElement;\n};\n/**\n * Removes portal parent container from document body\n */\n\n\nvar removePortalParent = function removePortalParent() {\n  getBody().removeChild(getPortalParent());\n};\n/**\n * Removes portal container from portal parent container\n *  @param {HTMLDivElement | undefined} container - portal container to be removed from portal parent container\n */\n\n\nexport var removePortalContainer = function removePortalContainer(container) {\n  getPortalParent().removeChild(container);\n};\n/**\n * Appends portal container to portal parent container\n *  @param {HTMLDivElement | undefined} container - portal container to be added to portal parent container\n */\n\nexport var appendPortalContainer = function appendPortalContainer(container) {\n  getPortalParent().appendChild(container);\n};\n/**\n * Removes portal parent container from document body if there are no more portals inside it\n */\n\nexport var removePortalParentContainerIfNoMorePortals = function removePortalParentContainerIfNoMorePortals() {\n  if (!document.querySelector(portalSelector)) {\n    removePortalParent();\n  }\n};","map":null,"metadata":{},"sourceType":"module"}