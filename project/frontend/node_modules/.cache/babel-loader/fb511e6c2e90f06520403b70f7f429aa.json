{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport React, { Component } from 'react';\nimport withAnalyticsEvents from '../hocs/withAnalyticsEvents';\nimport AnalyticsContext from './AnalyticsContext/LegacyAnalyticsContext'; // eslint-disable-next-line @repo/internal/react/no-class-components\n\nexport var BaseAnalyticsErrorBoundary =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BaseAnalyticsErrorBoundary, _Component);\n\n  var _super = _createSuper(BaseAnalyticsErrorBoundary);\n\n  function BaseAnalyticsErrorBoundary(props) {\n    var _this;\n\n    _classCallCheck(this, BaseAnalyticsErrorBoundary);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"fireAnalytics\", function (analyticsErrorPayload) {\n      var _this$props = _this.props,\n          createAnalyticsEvent = _this$props.createAnalyticsEvent,\n          channel = _this$props.channel,\n          data = _this$props.data;\n      createAnalyticsEvent({\n        action: 'UnhandledError',\n        eventType: 'ui',\n        attributes: _objectSpread(_objectSpread({\n          browserInfo: window && window.navigator && window.navigator.userAgent ? window.navigator.userAgent : 'unknown'\n        }, data), analyticsErrorPayload)\n      }).fire(channel);\n    });\n\n    _this.state = {\n      hasError: false\n    };\n    return _this;\n  }\n\n  _createClass(BaseAnalyticsErrorBoundary, [{\n    key: \"componentDidCatch\",\n    value: function componentDidCatch(error, info) {\n      var onError = this.props.onError;\n      var payload = {\n        error: error,\n        info: info\n      };\n      this.fireAnalytics(payload);\n      onError && onError(error, info);\n      this.setState({\n        hasError: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          data = _this$props2.data,\n          children = _this$props2.children,\n          ErrorComponent = _this$props2.ErrorComponent;\n      var hasError = this.state.hasError;\n\n      if (hasError && ErrorComponent) {\n        return (\n          /*#__PURE__*/\n          React.createElement(AnalyticsContext, {\n            data: data\n          },\n          /*#__PURE__*/\n          React.createElement(ErrorComponent, null))\n        );\n      }\n\n      return (\n        /*#__PURE__*/\n        React.createElement(AnalyticsContext, {\n          data: data\n        }, children)\n      );\n    }\n  }]);\n\n  return BaseAnalyticsErrorBoundary;\n}(Component);\nvar AnalyticsErrorBoundary = withAnalyticsEvents()(BaseAnalyticsErrorBoundary);\nexport default AnalyticsErrorBoundary;","map":null,"metadata":{},"sourceType":"module"}