{"ast":null,"code":"var _jsxFileName = \"/home/dev/Desktop/Projects/camp-website/project/frontend/src/Components/calendar/Calendar.js\";\nimport React, { Component } from 'react';\nimport DayNames from './DayNames';\nimport uuid from 'uuid/v4';\nimport Week from './Week';\nimport moment from 'moment/moment';\nimport s from './Calendar.module.css';\n\nclass Calendar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedMonth: moment(),\n      selectedDay: moment().startOf(\"day\"),\n      selectedMonthEvents: [{\n        title: \"The flower bed\",\n        info: \"Contents here\",\n        itemStyle: \"#1870dc\",\n        date: moment(\"\".concat(moment().year(), \"-\").concat(moment().month() + 1, \"-02\"), \"YYYY-MM-DD\")\n      }, {\n        title: \"Stop world water pollution\",\n        info: \"Have a kick off meeting with .inc company\",\n        itemStyle: \"#f0b518\",\n        date: moment(\"\".concat(moment().year(), \"-\").concat(moment().month() + 1, \"-05\"), \"YYYY-MM-DD\")\n      }, {\n        title: \"Light Blue Template 1.0.0 release\",\n        info: \"Some contents here\",\n        itemStyle: \"#2d8515\",\n        date: moment(\"\".concat(moment().year(), \"-\").concat(moment().month() + 1, \"-18\"), \"YYYY-MM-DD\")\n      }, {\n        title: \"A link\",\n        info: \"\",\n        itemStyle: \"#f45722\",\n        link: \"http://www.flatlogic.com\",\n        date: moment(\"\".concat(moment().year(), \"-\").concat(moment().month() + 1, \"-29\"), \"YYYY-MM-DD\")\n      }],\n      showEvents: false\n    };\n\n    this.previous = () => {\n      this.setState({\n        selectedMonth: this.state.selectedMonth.subtract(1, \"month\")\n      });\n    };\n\n    this.next = () => {\n      this.setState({\n        selectedMonth: this.state.selectedMonth.add(1, \"month\")\n      });\n    };\n\n    this.renderMonthLabel = () => {\n      return React.createElement(\"span\", {\n        className: \"\".concat(s.calendarItemContainer, \" \").concat(s.monthLabel),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, this.state.selectedMonth.format(\"MMMM YYYY\"));\n    };\n\n    this.renderWeeks = () => {\n      const currentMonthView = this.state.selectedMonth;\n      const currentSelectedDay = this.state.selectedDay;\n      let weeks = [];\n      let done = false;\n      let previousCurrentNextView = currentMonthView.clone().startOf(\"month\").subtract(1, \"d\").day(\"Sunday\");\n      let count = 0;\n      let monthIndex = previousCurrentNextView.month();\n\n      while (!done) {\n        weeks.push(React.createElement(Week, {\n          key: uuid(),\n          selectedMonthEvents: this.state.selectedMonthEvents,\n          previousCurrentNextView: previousCurrentNextView.clone(),\n          currentMonthView: currentMonthView,\n          selected: currentSelectedDay,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }));\n        previousCurrentNextView.add(1, \"w\");\n        done = count++ > 2 && monthIndex !== previousCurrentNextView.month();\n        monthIndex = previousCurrentNextView.month();\n      }\n\n      return weeks;\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"\".concat(s.calendarRectangle),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"\".concat(s.mainCalendar),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"\".concat(s.calendarHeader),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"\".concat(s.calendarRow, \" \").concat(s.titleHeader),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"\".concat(s.calendarItemContainer, \" \").concat(s.arrow, \" la la-arrow-left\"),\n      onClick: this.previous,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"\".concat(s.calendarItemContainer, \" \").concat(s.headerText),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, this.renderMonthLabel()), React.createElement(\"i\", {\n      className: \"\".concat(s.calendarItemContainer, \" \").concat(s.arrow, \" la la-arrow-right\"),\n      onClick: this.next,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })), React.createElement(DayNames, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"\".concat(s.daysContainer),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, this.renderWeeks()))));\n  }\n\n}\n\nexport default Calendar;","map":{"version":3,"sources":["/home/dev/Desktop/Projects/camp-website/project/frontend/src/Components/calendar/Calendar.js"],"names":["React","Component","DayNames","uuid","Week","moment","s","Calendar","state","selectedMonth","selectedDay","startOf","selectedMonthEvents","title","info","itemStyle","date","year","month","link","showEvents","previous","setState","subtract","next","add","renderMonthLabel","calendarItemContainer","monthLabel","format","renderWeeks","currentMonthView","currentSelectedDay","weeks","done","previousCurrentNextView","clone","day","count","monthIndex","push","render","calendarRectangle","mainCalendar","calendarHeader","calendarRow","titleHeader","arrow","headerText","daysContainer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport DayNames from './DayNames'\nimport uuid from 'uuid/v4'\nimport Week from './Week'\nimport moment from 'moment/moment'\nimport s from './Calendar.module.css'\n\n\nclass Calendar extends Component {\n\n    state = {\n      selectedMonth: moment(),\n      selectedDay: moment().startOf(\"day\"),\n      selectedMonthEvents: [\n        {\n          title: \"The flower bed\",\n          info: \"Contents here\",\n          itemStyle: \"#1870dc\",\n          date: moment(`${moment().year()}-${moment().month()+1}-02`, \"YYYY-MM-DD\"),\n        },\n        {\n          title: \"Stop world water pollution\",\n          info: \"Have a kick off meeting with .inc company\",\n          itemStyle: \"#f0b518\",\n          date: moment(`${moment().year()}-${moment().month()+1}-05`, \"YYYY-MM-DD\"),\n        },\n        {\n          title: \"Light Blue Template 1.0.0 release\",\n          info: \"Some contents here\",\n          itemStyle: \"#2d8515\",\n          date: moment(`${moment().year()}-${moment().month()+1}-18`, \"YYYY-MM-DD\"),\n        },\n        {\n          title: \"A link\",\n          info: \"\",\n          itemStyle: \"#f45722\",\n          link: \"http://www.flatlogic.com\",\n          date: moment(`${moment().year()}-${moment().month()+1}-29`, \"YYYY-MM-DD\"),\n        },\n      ],\n      showEvents: false\n    };\n\n  previous = () => {\n    this.setState({\n      selectedMonth: this.state.selectedMonth.subtract(1, \"month\")\n    });\n  }\n\n  next = () =>  {\n    this.setState({\n      selectedMonth: this.state.selectedMonth.add(1, \"month\")\n    });\n  }\n  \n  renderMonthLabel = () =>  {\n    return (\n      <span className={`${s.calendarItemContainer} ${s.monthLabel}`}>\n        {this.state.selectedMonth.format(\"MMMM YYYY\")}\n      </span>\n    );\n  }\n\n\n\n  \n  renderWeeks = () =>  {\n    const currentMonthView = this.state.selectedMonth;\n    const currentSelectedDay = this.state.selectedDay;\n\n    let weeks = [];\n    let done = false;\n    let previousCurrentNextView = currentMonthView\n      .clone()\n      .startOf(\"month\")\n      .subtract(1, \"d\")\n      .day(\"Sunday\");\n    let count = 0;\n    let monthIndex = previousCurrentNextView.month();\n\n    while (!done) {\n      weeks.push(\n        <Week\n          key={uuid()}\n          selectedMonthEvents={this.state.selectedMonthEvents}\n          previousCurrentNextView={previousCurrentNextView.clone()}\n          currentMonthView={currentMonthView}\n          selected={currentSelectedDay}\n        />\n      );\n      previousCurrentNextView.add(1, \"w\");\n      done = count++ > 2 && monthIndex !== previousCurrentNextView.month();\n      monthIndex = previousCurrentNextView.month();\n    }\n    return weeks;\n  }\n\n\n  render() {\n\n      return (\n        <div className={`${s.calendarRectangle}`}>\n        <div>\n        <section className={`${s.mainCalendar}`}>\n          <header className={`${s.calendarHeader}`}>\n            <div className={`${s.calendarRow} ${s.titleHeader}`}>\n              <i\n                className={`${s.calendarItemContainer} ${s.arrow} la la-arrow-left`}\n                onClick={this.previous}\n              />\n              <div className={`${s.calendarItemContainer} ${s.headerText}`}>\n              \n              {this.renderMonthLabel()}\n              </div>\n              <i \n                className={`${s.calendarItemContainer} ${s.arrow} la la-arrow-right`} \n                onClick={this.next} \n              />\n            </div>\n            <DayNames />\n          </header>\n          <div className={`${s.daysContainer}`}>\n            {this.renderWeeks()}\n          </div>\n        </section>\n        </div>\n        </div>\n      );\n    }\n}\n\nexport default Calendar;\n"]},"metadata":{},"sourceType":"module"}