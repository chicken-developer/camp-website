{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _typeof from \"@babel/runtime/helpers/typeof\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n/** @jsx jsx */\n\nimport { useCallback, useMemo } from 'react';\nimport { jsx } from '@emotion/core';\nimport FocusLock from 'react-focus-lock';\nimport { useUID } from 'react-uid';\nimport { usePlatformLeafEventHandler } from '@atlaskit/analytics-next';\nimport Blanket from '@atlaskit/blanket';\nimport mergeRefs from '@atlaskit/ds-lib/merge-refs';\nimport useAutoFocus from '@atlaskit/ds-lib/use-auto-focus';\nimport useCloseOnEscapePress from '@atlaskit/ds-lib/use-close-on-escape-press';\nimport FadeIn from '@atlaskit/motion/fade-in';\nimport useOnMotionFinish from '../hooks/use-on-motion-finish';\nimport usePreventProgrammaticScroll from '../hooks/use-prevent-programmatic-scroll';\nimport { getDialogStyles, getFillScreenStyles } from '../styles/modal';\nimport Content from './content';\nimport Positioner from './positioner';\n\nfunction ModalDialogInner(props) {\n  var actions = props.actions,\n      appearance = props.appearance,\n      autoFocus = props.autoFocus,\n      body = props.body,\n      children = props.children,\n      components = props.components,\n      footer = props.footer,\n      header = props.header,\n      height = props.height,\n      isBlanketHidden = props.isBlanketHidden,\n      isChromeless = props.isChromeless,\n      isHeadingMultiline = props.isHeadingMultiline,\n      onClose = props.onClose,\n      onCloseComplete = props.onCloseComplete,\n      onOpenComplete = props.onOpenComplete,\n      shouldCloseOnEscapePress = props.shouldCloseOnEscapePress,\n      shouldCloseOnOverlayClick = props.shouldCloseOnOverlayClick,\n      stackIndex = props.stackIndex,\n      heading = props.heading,\n      width = props.width,\n      scrollBehavior = props.scrollBehavior,\n      testId = props.testId;\n  var id = useUID();\n  var scrollDistance = usePreventProgrammaticScroll();\n  var isForeground = stackIndex === 0;\n  var onCloseHandler = usePlatformLeafEventHandler({\n    fn: onClose,\n    action: 'closed',\n    componentName: 'modalDialog',\n    packageName: \"@atlaskit/modal-dialog\",\n    packageVersion: \"11.7.2\"\n  });\n  useCloseOnEscapePress({\n    onClose: onCloseHandler,\n    isDisabled: !shouldCloseOnEscapePress || !isForeground\n  });\n\n  var _useOnMotionFinish = useOnMotionFinish({\n    onOpenComplete: onOpenComplete,\n    onCloseComplete: onCloseComplete\n  }),\n      _useOnMotionFinish2 = _slicedToArray(_useOnMotionFinish, 2),\n      motionRef = _useOnMotionFinish2[0],\n      onMotionFinish = _useOnMotionFinish2[1];\n\n  var onBlanketClicked = useCallback(function (e) {\n    if (shouldCloseOnOverlayClick) {\n      onCloseHandler(e);\n    }\n  }, [shouldCloseOnOverlayClick, onCloseHandler]);\n  useAutoFocus(_typeof(autoFocus) === 'object' ? autoFocus : undefined, // When a user supplies  a ref to focus we enable this hook\n  _typeof(autoFocus) === 'object');\n  var fillScreenStyles = useMemo(function () {\n    return getFillScreenStyles(scrollDistance);\n  }, [scrollDistance]);\n  var dialogStyles = useMemo(function () {\n    return getDialogStyles({\n      isChromeless: isChromeless,\n      height: height,\n      width: width\n    });\n  }, [isChromeless, height, width]);\n  return jsx(FadeIn, null, function (fadeInProps) {\n    return jsx(\"div\", _extends({}, fadeInProps, {\n      css: fillScreenStyles,\n      \"aria-hidden\": !isForeground\n    }), jsx(FocusLock, {\n      autoFocus: // When a user supplies a ref to focus we skip focusing automatically\n      typeof autoFocus === 'boolean' ? autoFocus : false,\n      disabled: !isForeground,\n      returnFocus: true\n    }, jsx(Blanket, {\n      isTinted: !isBlanketHidden,\n      onBlanketClicked: onBlanketClicked,\n      testId: testId && \"\".concat(testId, \"--blanket\")\n    }), jsx(Positioner, {\n      scrollBehavior: scrollBehavior,\n      stackIndex: stackIndex,\n      testId: testId\n    }, jsx(FadeIn, {\n      entranceDirection: \"bottom\",\n      onFinish: onMotionFinish\n    }, function (bottomFadeInProps) {\n      return jsx(\"section\", _extends({}, bottomFadeInProps, {\n        ref: mergeRefs([bottomFadeInProps.ref, motionRef]),\n        css: dialogStyles,\n        role: \"dialog\",\n        \"aria-labelledby\": \"dialog-heading-\".concat(id),\n        \"data-testid\": testId,\n        tabIndex: -1,\n        \"aria-modal\": true\n      }), jsx(Content, {\n        actions: actions,\n        appearance: appearance,\n        components: components,\n        header: header,\n        body: body,\n        footer: footer,\n        heading: heading,\n        headingId: \"dialog-heading-\".concat(id),\n        testId: testId && \"\".concat(testId, \"-dialog-content\"),\n        isChromeless: isChromeless,\n        isHeadingMultiline: isHeadingMultiline,\n        onClose: onCloseHandler,\n        stackIndex: stackIndex,\n        shouldScroll: scrollBehavior === 'inside' || scrollBehavior === 'inside-wide'\n      }, children));\n    }))));\n  });\n}\n\nexport default ModalDialogInner;","map":null,"metadata":{},"sourceType":"module"}