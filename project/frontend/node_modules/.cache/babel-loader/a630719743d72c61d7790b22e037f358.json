{"ast":null,"code":"/* eslint-disable prefer-rest-params */\nimport getTheme from './getTheme'; // Unpack custom variants, and get correct value for the current theme\n\nfunction themedVariants(variantProp, variants) {\n  return function (props) {\n    var theme = getTheme(props);\n\n    if (props && props[variantProp] && variants) {\n      var modes = variants[props[variantProp]];\n\n      if (modes && modes[theme.mode]) {\n        var value = modes[theme.mode];\n\n        if (value) {\n          return value;\n        } // TS believes value can be undefined\n\n      }\n    }\n\n    return '';\n  };\n}\n\nexport default function themed(modesOrVariant, variantModes) {\n  if (typeof modesOrVariant === 'string') {\n    return themedVariants(modesOrVariant, variantModes);\n  }\n\n  var modes = modesOrVariant;\n  return function (props) {\n    // Get theme from the user's props\n    var theme = getTheme(props); // User isn't required to provide both light and dark values\n\n    if (theme.mode in modes) {\n      var value = modes[theme.mode]; // TS believes value can be undefined\n\n      if (value) {\n        return value;\n      }\n    }\n\n    return '';\n  };\n}","map":null,"metadata":{},"sourceType":"module"}