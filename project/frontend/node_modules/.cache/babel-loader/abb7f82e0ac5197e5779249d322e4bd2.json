{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport { createTheme } from '@atlaskit/theme/components';\nimport { getCss } from '../shared/css';\nvar stateToSelectorMap = {\n  focus: '&:focus',\n  focusSelected: '&:focus',\n  hover: '&:hover',\n  active: '&:active',\n  disabled: '&[disabled]'\n}; // Mapping the new clean css back to the legacy theme format.\n// The legacy theme format has all styles at the top level (no nested selectors)\n// and uses `getSpecifiers()` to apply the style to all psudeo states\n\nexport function getCustomCss(_ref) {\n  var _ref$appearance = _ref.appearance,\n      appearance = _ref$appearance === void 0 ? 'default' : _ref$appearance,\n      _ref$spacing = _ref.spacing,\n      spacing = _ref$spacing === void 0 ? 'default' : _ref$spacing,\n      _ref$mode = _ref.mode,\n      mode = _ref$mode === void 0 ? 'light' : _ref$mode,\n      _ref$isSelected = _ref.isSelected,\n      isSelected = _ref$isSelected === void 0 ? false : _ref$isSelected,\n      _ref$shouldFitContain = _ref.shouldFitContainer,\n      shouldFitContainer = _ref$shouldFitContain === void 0 ? false : _ref$shouldFitContain,\n      _ref$iconIsOnlyChild = _ref.iconIsOnlyChild,\n      iconIsOnlyChild = _ref$iconIsOnlyChild === void 0 ? false : _ref$iconIsOnlyChild,\n      _ref$isLoading = _ref.isLoading,\n      isLoading = _ref$isLoading === void 0 ? false : _ref$isLoading,\n      state = _ref.state;\n  var result = getCss({\n    appearance: appearance,\n    spacing: spacing,\n    mode: mode,\n    isSelected: isSelected,\n    shouldFitContainer: shouldFitContainer,\n    isOnlySingleIcon: iconIsOnlyChild\n  }); // we need to disable the default browser focus styles always\n  // this is because we are not expressing that we can have two pesduo states at a time\n\n  result.outline = 'none'; // Pulling relevant styles up to the top level\n\n  var selector = stateToSelectorMap[state];\n\n  if (selector) {\n    result = _objectSpread(_objectSpread({}, result), result[selector]);\n  }\n\n  if (isLoading) {\n    result = _objectSpread(_objectSpread({}, result), result['&[data-has-overlay=\"true\"]']);\n  } // Delete all selectors and just keep root styles\n\n\n  Object.keys(result).forEach(function (key) {\n    // want to keep this one\n    if (key === '&::-moz-focus-inner') {\n      return;\n    } // Not using .startsWith for ie11\n\n\n    if (key.indexOf('&') === 0) {\n      delete result[key];\n    }\n  });\n  return result;\n} // This styling approach works by generating a 'style' and applying with maximum specificity\n// To do this we are overwriting all psuedo selectors\n\nexport function getSpecifiers(styles) {\n  return {\n    '&, &:hover, &:active, &:focus, &:visited, &:disabled, &[disabled]': styles\n  };\n}\nexport function defaultThemeFn(current, values) {\n  return current(values);\n}\nvar Theme = createTheme(function (themeProps) {\n  return {\n    buttonStyles: getCustomCss(themeProps),\n    // No styles being applied directly to spinner by default\n    // Keeping this for legacy compat. We could remove it, but given\n    // that we are changing theme soon there is no point\n    spinnerStyles: {}\n  };\n});\nexport default Theme;","map":null,"metadata":{},"sourceType":"module"}