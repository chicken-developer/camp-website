{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\n\nvar _templateObject, _templateObject2;\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport SuccessIcon from '@atlaskit/icon/glyph/editor/success';\nimport ErrorIcon from '@atlaskit/icon/glyph/error';\nimport { G400, N200, R400 } from '@atlaskit/theme/colors';\nimport { fontFamily, gridSize } from '@atlaskit/theme/constants';\nimport { multiply } from '@atlaskit/theme/math';\nimport { h200 } from '@atlaskit/theme/typography';\nimport { FieldId } from './Field';\nvar Message = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  \", \" font-weight: normal;\\n  font-family: \", \";\\n  color: \", \";\\n  margin-top: \", \"px;\\n  display: flex;\\n  justify-content: baseline;\\n\"])), h200, fontFamily(), function (props) {\n  if (props.error) {\n    return R400;\n  }\n\n  if (props.valid) {\n    return G400;\n  }\n\n  return N200;\n}, multiply(gridSize, 0.5));\nvar IconWrapper = styled.span(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  display: flex;\\n\"])));\nexport var HelperMessage = function HelperMessage(_ref) {\n  var children = _ref.children,\n      testId = _ref.testId;\n  return (\n    /*#__PURE__*/\n    React.createElement(FieldId.Consumer, null, function (fieldId) {\n      return (\n        /*#__PURE__*/\n        React.createElement(Message, {\n          id: fieldId ? \"\".concat(fieldId, \"-helper\") : undefined,\n          \"data-testid\": testId\n        }, children)\n      );\n    })\n  );\n};\nexport var ErrorMessage = function ErrorMessage(_ref2) {\n  var children = _ref2.children,\n      testId = _ref2.testId;\n  return (\n    /*#__PURE__*/\n    React.createElement(FieldId.Consumer, null, function (fieldId) {\n      return (\n        /*#__PURE__*/\n        React.createElement(Message, {\n          error: true,\n          id: fieldId ? \"\".concat(fieldId, \"-error\") : undefined,\n          \"data-testid\": testId\n        },\n        /*#__PURE__*/\n        React.createElement(IconWrapper, null,\n        /*#__PURE__*/\n        React.createElement(ErrorIcon, {\n          size: \"small\",\n          label: \"error\"\n        })), children)\n      );\n    })\n  );\n};\nexport var ValidMessage = function ValidMessage(_ref3) {\n  var children = _ref3.children,\n      testId = _ref3.testId;\n  return (\n    /*#__PURE__*/\n    React.createElement(FieldId.Consumer, null, function (fieldId) {\n      return (\n        /*#__PURE__*/\n        React.createElement(Message, {\n          valid: true,\n          id: fieldId ? \"\".concat(fieldId, \"-valid\") : undefined,\n          \"data-testid\": testId\n        },\n        /*#__PURE__*/\n        React.createElement(IconWrapper, null,\n        /*#__PURE__*/\n        React.createElement(SuccessIcon, {\n          size: \"small\",\n          label: \"success\"\n        })), children)\n      );\n    })\n  );\n};","map":null,"metadata":{},"sourceType":"module"}