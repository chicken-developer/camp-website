{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4;\n/** @jsx jsx */\n\n\nimport React from 'react';\nimport { css, jsx, keyframes } from '@emotion/core';\nimport { DN500, DN900, N0, N500 } from '@atlaskit/theme/colors';\nimport GlobalTheme from '@atlaskit/theme/components';\nimport { presetSizes } from './constants';\nvar rotate = keyframes(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  to { transform: rotate(360deg); }\\n\"]))); // There are three parts to the load in animation:\n// 1. Fade in\n// 2. Accelerated spin\n// 3. Stretch the spinner line\n\nvar loadIn = keyframes(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  from {\\n    transform: rotate(50deg);\\n    opacity: 0;\\n    stroke-dashoffset: 60;\\n  }\\n  to {\\n    transform: rotate(230deg);\\n    opacity: 1;\\n    stroke-dashoffset: 50;\\n  }\\n\"])));\n\nfunction getStrokeColor(_ref) {\n  var mode = _ref.mode,\n      appearance = _ref.appearance;\n\n  if (mode === 'light') {\n    return appearance === 'inherit' ? N500 : N0;\n  } // Dark mode: colours provided by Jake Miller\n\n\n  return appearance === 'inherit' ? DN900 : DN500;\n}\n\nexport default\n/*#__PURE__*/\nReact.memo(\n/*#__PURE__*/\nReact.forwardRef(function Spinner(_ref2, ref) {\n  var testId = _ref2.testId,\n      _ref2$appearance = _ref2.appearance,\n      appearance = _ref2$appearance === void 0 ? 'inherit' : _ref2$appearance,\n      _ref2$delay = _ref2.delay,\n      delay = _ref2$delay === void 0 ? 0 : _ref2$delay,\n      _ref2$size = _ref2.size,\n      providedSize = _ref2$size === void 0 ? 'medium' : _ref2$size;\n  var size = typeof providedSize === 'number' ? providedSize : presetSizes[providedSize];\n  return jsx(GlobalTheme.Consumer, null, function (tokens) {\n    var strokeColor = getStrokeColor({\n      mode: tokens.mode,\n      appearance: appearance\n    }); // The Spinner animation uses a combination of two\n    // css animations on two separate elements.\n\n    return jsx(\"span\", {\n      /* This span exists to off-load animations from the circle element,\n       which were causing performance issues (style recalculations) on Safari and older versions of Chrome.\n       This can be removed and styles placed back on the circle element once Safari fixes this bug and off-loads rendering to the GPU from the CPU.\n       */\n      css: css(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n                transform-origin: center;\\n                animation: \", \" 0.86s infinite;\\n                animation-delay: \", \"ms;\\n                animation-timing-function: cubic-bezier(0.4, 0.15, 0.6, 0.85);\\n                height: \", \"px;\\n                width: \", \"px;\\n                display: inline-flex;\\n                /* align better inline with text */\\n                vertical-align: middle;\\n              \"])), rotate, delay, size, size),\n      \"data-testid\": testId && \"\".concat(testId, \"-wrapper\")\n    }, jsx(\"svg\", {\n      height: size,\n      width: size,\n      viewBox: \"0 0 16 16\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      \"data-testid\": testId,\n      ref: ref,\n      css: css(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n                  /* We are going to animate this in */\\n                  opacity: 0;\\n\\n                  animation: \", \" 1s ease-in-out;\\n                  /* When the animation completes, stay at the last frame of the animation */\\n                  animation-fill-mode: forwards;\\n                  animation-delay: \", \"ms;\\n                  fill: none;\\n                  stroke: \", \";\\n                  stroke-width: 1.5;\\n                  stroke-linecap: round;\\n                  stroke-dasharray: 60;\\n                  stroke-dashoffset: inherit;\\n                  @media screen and (-ms-high-contrast: white-on-black) {\\n                    filter: grayscale(100%);\\n                    stroke: \", \";\\n                  }\\n                  @media screen and (-ms-high-contrast: black-on-white) {\\n                    filter: grayscale(100%);\\n                    stroke: #000000;\\n                  }\\n                \"])), loadIn, delay, strokeColor, N0)\n    }, jsx(\"circle\", {\n      cx: \"8\",\n      cy: \"8\",\n      r: \"7\"\n    })));\n  });\n}));","map":null,"metadata":{},"sourceType":"module"}