[{"/home/dev/Desktop/Projects/camp-website/project/frontend/src/index.js":"1","/home/dev/Desktop/Projects/camp-website/project/frontend/src/App.js":"2","/home/dev/Desktop/Projects/camp-website/project/frontend/src/pages/Login/Login.tsx":"3","/home/dev/Desktop/Projects/camp-website/project/frontend/src/pages/HomePage/HomePage.tsx":"4","/home/dev/Desktop/Projects/camp-website/project/frontend/src/pages/RegisterPage/Register.tsx":"5","/home/dev/Desktop/Projects/camp-website/project/frontend/src/pages/network/camp-api.ts":"6","/home/dev/Desktop/Projects/camp-website/project/frontend/src/http-common.ts":"7","/home/dev/Desktop/Projects/camp-website/project/frontend/src/pages/network/types/Camp.tsx":"8"},{"size":274,"mtime":1626461482437,"results":"9","hashOfConfig":"10"},{"size":1757,"mtime":1626476435569,"results":"11","hashOfConfig":"10"},{"size":1271,"mtime":1626462413893,"results":"12","hashOfConfig":"10"},{"size":3452,"mtime":1626649914795,"results":"13","hashOfConfig":"10"},{"size":1483,"mtime":1626462385235,"results":"14","hashOfConfig":"10"},{"size":657,"mtime":1626649368167,"results":"15","hashOfConfig":"10"},{"size":180,"mtime":1626650305832,"results":"16","hashOfConfig":"10"},{"size":132,"mtime":1626648411181,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"18rk3ez",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/home/dev/Desktop/Projects/camp-website/project/frontend/src/index.js",[],["39","40"],"/home/dev/Desktop/Projects/camp-website/project/frontend/src/App.js",[],"/home/dev/Desktop/Projects/camp-website/project/frontend/src/pages/Login/Login.tsx",["41","42"],"import React, { Component } from \"react\";\n\nfunction Login() {\n    const handleLogin = () => {\n\n    };\n        return (\n            <form>\n                <h3>Sign In</h3>\n\n                <div className=\"form-group\">\n                    <label>Email address</label>\n                    <input type=\"email\" className=\"form-control\" placeholder=\"Enter email\" />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Password</label>\n                    <input type=\"password\" className=\"form-control\" placeholder=\"Enter password\" />\n                </div>\n\n                <div className=\"form-group\">\n                    <div className=\"custom-control custom-checkbox\">\n                        <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\n                        <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Remember me</label>\n                    </div>\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-primary btn-block\" onClick={handleLogin}>Login</button>\n                <p className=\"forgot-password text-right\">\n                    Forgot <a href=\"#\">password?</a>\n                </p>\n            </form>\n        );\n\n}\nexport default Login;",["43","44"],"/home/dev/Desktop/Projects/camp-website/project/frontend/src/pages/HomePage/HomePage.tsx",["45"],"import React, { useState, useEffect, ChangeEvent } from \"react\";\nimport CampService from \"../network/camp-api\";\nimport { Link } from \"react-router-dom\";\nimport ICampData from \"../network/types/Camp\";\n\nconst CampList: React.FC = () => {\n    const [camp, setCamp] = useState<Array<ICampData>>([]);\n    const [currentCamp, setCurrentCamp] = useState<ICampData | null>(null);\n    const [currentIndex, setCurrentIndex] = useState<number>(-1);\n\n    useEffect(() => {\n        retrieveCamps();\n    }, []);\n\n\n    const retrieveCamps = () => {\n        CampService.getAll()\n            .then((response: { data: React.SetStateAction<ICampData[]>; }) => {\n                setCamp(response.data);\n                console.log(response.data);\n            })\n            .catch((e) => {\n                console.log(e);\n            });\n    };\n\n    const refreshList = () => {\n        retrieveCamps();\n        setCurrentCamp(null);\n        setCurrentIndex(-1);\n    };\n\n    const setActiveCamp = (tutorial: ICampData, index: number) => {\n        setCurrentCamp(tutorial);\n        setCurrentIndex(index);\n    };\n\n    const removeAllCamps = () => {\n        CampService.removeAll()\n            .then((response: { data: any; }) => {\n                console.log(response.data);\n                refreshList();\n            })\n            .catch((e: any) => {\n                console.log(e);\n            });\n    };\n\n    return (\n        <div className=\"list row\">\n            <div className=\"col-md-6\">\n                <h4>Camps List</h4>\n\n                <ul className=\"list-group\">\n                    {camp &&\n                    camp.map((camp, index) => (\n                        <li\n                            className={\n                                \"list-group-item \" + (index === currentIndex ? \"active\" : \"\")\n                            }\n                            onClick={() => setActiveCamp(camp, index)}\n                            key={index}\n                        >\n                            {camp.campId}\n                        </li>\n                    ))}\n                </ul>\n\n                <button\n                    className=\"m-3 btn btn-sm btn-danger\"\n                    onClick={removeAllCamps}\n                >\n                    Remove All\n                </button>\n            </div>\n            <div className=\"col-md-6\">\n                {currentCamp ? (\n                    <div>\n                        <h4>Camp</h4>\n                        <div>\n                            <label>\n                                <strong>Title:</strong>\n                            </label>{\" \"}\n                            {currentCamp.campId}\n                        </div>\n                        <div>\n                            <label>\n                                <strong>Description:</strong>\n                            </label>{\" \"}\n                            {currentCamp.price}\n                        </div>\n\n\n                        <Link\n                            to={\"/camp/?campId=\" + currentCamp.campId}\n                            className=\"badge badge-warning\"\n                        >\n                            Edit\n                        </Link>\n                    </div>\n                ) : (\n                    <div>\n                        <br />\n                        <p>Click on camp</p>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default CampList;\n","/home/dev/Desktop/Projects/camp-website/project/frontend/src/pages/RegisterPage/Register.tsx",["46","47"],"import React, { Component } from \"react\";\n\nfunction Register(){\n        return (\n            <form>\n                <h3>Sign Up</h3>\n\n                <div className=\"form-group\">\n                    <label>First name</label>\n                    <input type=\"text\" className=\"form-control\" placeholder=\"First name\" />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Last name</label>\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Last name\" />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Email address</label>\n                    <input type=\"email\" className=\"form-control\" placeholder=\"Enter email\" />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Phone number</label>\n                    <input type=\"phone\" className=\"form-control\" placeholder=\"Enter phone number\" />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Password</label>\n                    <input type=\"password\" className=\"form-control\" placeholder=\"Enter password\" />\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-primary btn-block\">Sign Up</button>\n\n                <p className=\"forgot-password text-right\">\n                    Already registered <a href=\"#\">sign in?</a>\n                </p>\n            </form>\n        );\n}\nexport default Register","/home/dev/Desktop/Projects/camp-website/project/frontend/src/pages/network/camp-api.ts",[],"/home/dev/Desktop/Projects/camp-website/project/frontend/src/http-common.ts",[],"/home/dev/Desktop/Projects/camp-website/project/frontend/src/pages/network/types/Camp.tsx",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":1,"column":17,"nodeType":"54","messageId":"55","endLine":1,"endColumn":26},{"ruleId":"56","severity":1,"message":"57","line":30,"column":28,"nodeType":"58","endLine":30,"endColumn":40},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"59","line":1,"column":38,"nodeType":"54","messageId":"55","endLine":1,"endColumn":49},{"ruleId":"52","severity":1,"message":"53","line":1,"column":17,"nodeType":"54","messageId":"55","endLine":1,"endColumn":26},{"ruleId":"56","severity":1,"message":"57","line":36,"column":40,"nodeType":"58","endLine":36,"endColumn":52},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"@typescript-eslint/no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'ChangeEvent' is defined but never used.","no-global-assign","no-unsafe-negation"]