"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Footer = exports.internalFooterStyles = exports.Body = exports.bodyStyles = exports.getTitleIconStyles = exports.getTitleTextStyles = exports.Title = exports.titleStyles = exports.Header = exports.headerStyles = exports.wrapperStyles = void 0;

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _core = require("@emotion/core");

var _styled = _interopRequireDefault(require("@emotion/styled"));

var _constants = require("../constants");

var _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11, _templateObject12, _templateObject13, _templateObject14, _templateObject15;

// Wrapper
// ==============================
var wrapperStyles = (0, _core.css)(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2.default)(["\n  display: flex;\n  flex-direction: column;\n\n  /**\n  * This ensures that the element fills the whole modal dialog space\n  * and its content does not overflow (since flex items don't\n  * shrink past its content size by default). */\n  flex: 1 1 auto;\n  min-height: 0;\n"]))); // Header
// ==============================

exports.wrapperStyles = wrapperStyles;
var headerStyles = (0, _core.css)(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2.default)(["\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  position: relative;\n  padding: ", "px;\n  padding-bottom: ", "px;\n"])), _constants.modalPadding, _constants.modalPadding - _constants.keylineHeight); // TODO: This is a public API, so should remove during breaking change later.

exports.headerStyles = headerStyles;

var Header = _styled.default.div(_templateObject3 || (_templateObject3 = (0, _taggedTemplateLiteral2.default)(["\n  ", "\n"])), headerStyles);

exports.Header = Header;
var titleStyles = (0, _core.css)(_templateObject4 || (_templateObject4 = (0, _taggedTemplateLiteral2.default)(["\n  display: flex;\n  align-items: center;\n\n  font-size: 20px;\n  font-style: inherit;\n  font-weight: 500;\n  letter-spacing: -0.008em;\n  line-height: 1;\n\n  min-width: 0;\n  margin: 0;\n"]))); // TODO: This is a public API, so should remove during breaking change later.

exports.titleStyles = titleStyles;

var Title = _styled.default.h1(_templateObject5 || (_templateObject5 = (0, _taggedTemplateLiteral2.default)(["\n  ", ";\n"])), titleStyles);

exports.Title = Title;

/** 20 = font size, 1.2 = adjusted line height.
 * When the heading is truncated (not multi-line), we adjust the
 * line height to avoid cropping the descenders. This removes
 * the extra spacing that we get from that adjustment.
 */
var lineHeightOffset = 20 - 20 * 1.2;

var getTitleTextStyles = function getTitleTextStyles(isHeadingMultiline) {
  return (0, _core.css)(_templateObject6 || (_templateObject6 = (0, _taggedTemplateLiteral2.default)(["\n  word-wrap: break-word;\n\n  /**\n  * This ensures that the element fills the whole header space\n  * and its content does not overflow (since flex items don't\n  * shrink past its content size by default). */\n  flex: 1 1 auto;\n  min-width: 0;\n\n  ", ";\n"])), isHeadingMultiline !== true && (0, _core.css)(_templateObject7 || (_templateObject7 = (0, _taggedTemplateLiteral2.default)(["\n    line-height: 1.2;\n    margin-top: ", "px;\n    margin-bottom: ", "px;\n\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  "])), lineHeightOffset / 2, lineHeightOffset / 2));
};

exports.getTitleTextStyles = getTitleTextStyles;
var iconColor = {
  danger: _constants.dangerColor,
  warning: _constants.warningColor
};

var getTitleIconStyles = function getTitleIconStyles(_ref) {
  var appearance = _ref.appearance,
      isHeadingMultiline = _ref.isHeadingMultiline;
  return (0, _core.css)(_templateObject8 || (_templateObject8 = (0, _taggedTemplateLiteral2.default)(["\n  flex: 0 0 auto; // Keeps the size of the icon the same, in case the text element grows in width.\n  color: ", ";\n  margin-right: ", "px;\n\n  ", ";\n"])), iconColor[appearance], _constants.titleMargin, isHeadingMultiline !== true && (0, _core.css)(_templateObject9 || (_templateObject9 = (0, _taggedTemplateLiteral2.default)(["\n    line-height: 1.2;\n    margin-bottom: ", "px;\n  "])), lineHeightOffset / 2));
}; // Body
// ==============================


exports.getTitleIconStyles = getTitleIconStyles;

/**
 * Adding the padding here avoids cropping the keyline on its sides.
 * The combined vertical spacing is maintained by subtracting the
 * keyline height from header and footer.
 */
var bodyStyles = (0, _core.css)(_templateObject10 || (_templateObject10 = (0, _taggedTemplateLiteral2.default)(["\n  flex: 1 1 auto; // Ensures the body fills the whole space between header and footer.\n  padding: ", "px ", "px;\n"])), _constants.keylineHeight, _constants.modalPadding); // TODO: This is a public API, so should remove during breaking change later.

exports.bodyStyles = bodyStyles;

var Body = _styled.default.div(_templateObject11 || (_templateObject11 = (0, _taggedTemplateLiteral2.default)(["\n  ", ";\n"])), bodyStyles); // Footer
// ==============================


exports.Body = Body;
var baseFooterStyles = (0, _core.css)(_templateObject12 || (_templateObject12 = (0, _taggedTemplateLiteral2.default)(["\n  display: flex;\n  align-items: center;\n\n  position: relative;\n  padding: ", "px;\n  padding-top: ", "px;\n\n  & [data-ds--modal-dialog--action] {\n    margin-left: ", "px;\n  }\n"])), _constants.modalPadding, _constants.modalPadding - _constants.keylineHeight, _constants.actionMargin);
/** This is the styles we use in our public Footer component,
 *  used when users build their own custom footer. */

var externalFooterStyles = (0, _core.css)(_templateObject13 || (_templateObject13 = (0, _taggedTemplateLiteral2.default)(["\n  ", "\n\n  /**\n   * Some of our users rely on this behavior\n   * to put actions on the left-hand side.\n   * e.g. https://atlaskit.atlassian.com/examples/editor/editor-core/full-page-with-x-extensions\n   * (Click '+' -> 'View more' to see the element browser in a modal).\n   */\n  justify-content: space-between;\n"])), baseFooterStyles);
/** This is the styles we use in our internal Footer component,
 *  used when users opt into our default footer + actions API. */

var internalFooterStyles = (0, _core.css)(_templateObject14 || (_templateObject14 = (0, _taggedTemplateLiteral2.default)(["\n  ", "\n\n  /**\n  * When we're /not/ using a custom footer, we place\n  * all actions on the right-hand side by default.\n  */\n  justify-content: flex-end;\n"])), baseFooterStyles); // TODO: This is a public API, so should remove during breaking change later.

exports.internalFooterStyles = internalFooterStyles;

var Footer = _styled.default.div(_templateObject15 || (_templateObject15 = (0, _taggedTemplateLiteral2.default)(["\n  ", ";\n"])), externalFooterStyles);

exports.Footer = Footer;