"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getDialogStyles = exports.getPositionFixedStyles = exports.getPositionAbsoluteStyles = exports.getPositionRelativeStyles = exports.getFillScreenStyles = exports.dialogHeight = exports.dialogWidth = void 0;

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _core = require("@emotion/core");

var _accessibility = require("@atlaskit/motion/accessibility");

var _curves = require("@atlaskit/motion/curves");

var _durations = require("@atlaskit/motion/durations");

var _colors = require("@atlaskit/theme/colors");

var _constants = require("@atlaskit/theme/constants");

var _constants2 = require("../constants");

var _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10;

var maxWidthDimensions = "calc(100vw - ".concat(_constants2.gutter * 2, "px)");
var maxHeightDimensions = "calc(100vh - ".concat(_constants2.gutter * 2 - 1, "px)");

var dialogWidth = function dialogWidth(width) {
  if (!width) {
    return 'auto';
  }

  var isWidthName = _constants2.WIDTH_ENUM.values.indexOf(width.toString()) !== -1;
  var widthName = isWidthName && width;

  if (widthName) {
    return "".concat(_constants2.WIDTH_ENUM.widths[widthName], "px");
  }

  return typeof width === 'number' ? "".concat(width, "px") : width;
};

exports.dialogWidth = dialogWidth;

var dialogHeight = function dialogHeight(height) {
  if (!height) {
    return 'auto';
  }

  return typeof height === 'number' ? "".concat(height, "px") : height;
};

exports.dialogHeight = dialogHeight;

var getFillScreenStyles = function getFillScreenStyles(scrollDistance) {
  return (0, _core.css)(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2.default)(["\n  height: 100vh;\n  width: 100vw;\n\n  // This instead of fixed so PopupSelect's\n  // children are properly positioned.\n  position: absolute;\n  top: ", "px;\n  left: 0;\n\n  z-index: ", ";\n  overflow-y: auto; // Enables scroll outside.\n  -webkit-overflow-scrolling: touch;\n"])), scrollDistance, _constants.layers.modal());
};

exports.getFillScreenStyles = getFillScreenStyles;

var modalStackTransition = function modalStackTransition(stackIndex) {
  return (0, _core.css)(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2.default)(["\n  // We only want to apply transform on modals shifting to the back of the stack.\n  transform: ", ";\n  transition-property: transform;\n  transition-duration: ", "ms;\n  transition-timing-function: ", ";\n  ", ";\n"])), stackIndex > 0 ? "translateY(".concat(stackIndex * (_constants2.verticalOffset / 2), "px)") : 'none', _durations.mediumDurationMs, _curves.easeInOut, (0, _accessibility.prefersReducedMotion)());
};

var positionerBaseStyles = (0, _core.css)(_templateObject3 || (_templateObject3 = (0, _taggedTemplateLiteral2.default)(["\n  top: ", "px;\n  left: 0;\n  right: 0;\n  margin-left: auto;\n  margin-right: auto;\n\n  max-width: ", ";\n  max-height: ", ";\n\n  pointer-events: none;\n  width: max-content;\n"])), _constants2.gutter, maxWidthDimensions, maxHeightDimensions);
var positionerResponsiveBaseStyles = (0, _core.css)(_templateObject4 || (_templateObject4 = (0, _taggedTemplateLiteral2.default)(["\n  position: fixed;\n  left: 0;\n  top: 0;\n\n  height: 100%;\n  width: 100%;\n  max-width: 100%;\n\n  z-index: ", ";\n"])), _constants.layers.modal());

var getPositionRelativeStyles = function getPositionRelativeStyles(stackIndex) {
  return (0, _core.css)(_templateObject5 || (_templateObject5 = (0, _taggedTemplateLiteral2.default)(["\n  ", ";\n  ", ";\n\n  margin: 0;\n\n  @media (min-width: 480px) {\n    position: relative;\n    margin: ", "px auto;\n    width: max-content;\n  }\n"])), positionerResponsiveBaseStyles, modalStackTransition(stackIndex), _constants2.gutter);
};

exports.getPositionRelativeStyles = getPositionRelativeStyles;

var getPositionAbsoluteStyles = function getPositionAbsoluteStyles(stackIndex) {
  return (0, _core.css)(_templateObject6 || (_templateObject6 = (0, _taggedTemplateLiteral2.default)(["\n  ", ";\n  ", ";\n\n  @media (min-width: 480px) {\n    ", ";\n    position: absolute;\n  }\n"])), positionerResponsiveBaseStyles, modalStackTransition(stackIndex), positionerBaseStyles);
};

exports.getPositionAbsoluteStyles = getPositionAbsoluteStyles;

var getPositionFixedStyles = function getPositionFixedStyles(stackIndex) {
  return (0, _core.css)(_templateObject7 || (_templateObject7 = (0, _taggedTemplateLiteral2.default)(["\n  ", ";\n  ", ";\n\n  @media (min-width: 480px) {\n    ", ";\n    position: fixed;\n  }\n"])), positionerResponsiveBaseStyles, modalStackTransition(stackIndex), positionerBaseStyles);
};

exports.getPositionFixedStyles = getPositionFixedStyles;

var getDialogStyles = function getDialogStyles(_ref) {
  var isChromeless = _ref.isChromeless,
      height = _ref.height,
      width = _ref.width;
  return (0, _core.css)(_templateObject8 || (_templateObject8 = (0, _taggedTemplateLiteral2.default)(["\n  color: ", ";\n  display: flex;\n  flex-direction: column;\n\n  pointer-events: auto;\n\n  height: 100%;\n  width: 100%;\n  max-height: 100vh;\n  max-width: 100vw;\n\n  ", "\n\n  @media (min-width: 480px) {\n    height: ", ";\n    width: ", ";\n    max-height: inherit;\n    max-width: inherit;\n\n    margin-left: inherit;\n    margin-right: inherit;\n\n    ", "\n  }\n"])), (0, _colors.text)(), isChromeless !== true && (0, _core.css)(_templateObject9 || (_templateObject9 = (0, _taggedTemplateLiteral2.default)(["\n    background-color: ", ";\n  "])), _colors.N0), dialogHeight(height), dialogWidth(width), isChromeless !== true && (0, _core.css)(_templateObject10 || (_templateObject10 = (0, _taggedTemplateLiteral2.default)(["\n      border-radius: ", "px;\n      box-shadow: 0 0 0 1px ", ", 0 2px 1px ", ", 0 0 20px -6px ", ";\n    "])), (0, _constants.borderRadius)(), _colors.N30A, _colors.N30A, _colors.N60A));
};

exports.getDialogStyles = getDialogStyles;