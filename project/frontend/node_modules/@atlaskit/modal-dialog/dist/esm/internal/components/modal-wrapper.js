import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import React from 'react';
import noop from '@atlaskit/ds-lib/noop';
import Portal from '@atlaskit/portal';
import { layers } from '@atlaskit/theme/constants';
import useModalStack from '../hooks/use-modal-stack';
import Modal from './modal';
export default function ModalWrapper(_ref) {
  var _ref$autoFocus = _ref.autoFocus,
      autoFocus = _ref$autoFocus === void 0 ? true : _ref$autoFocus,
      _ref$scrollBehavior = _ref.scrollBehavior,
      scrollBehavior = _ref$scrollBehavior === void 0 ? 'inside' : _ref$scrollBehavior,
      _ref$shouldCloseOnEsc = _ref.shouldCloseOnEscapePress,
      shouldCloseOnEscapePress = _ref$shouldCloseOnEsc === void 0 ? true : _ref$shouldCloseOnEsc,
      _ref$shouldCloseOnOve = _ref.shouldCloseOnOverlayClick,
      shouldCloseOnOverlayClick = _ref$shouldCloseOnOve === void 0 ? true : _ref$shouldCloseOnOve,
      _ref$isChromeless = _ref.isChromeless,
      isChromeless = _ref$isChromeless === void 0 ? false : _ref$isChromeless,
      _ref$width = _ref.width,
      width = _ref$width === void 0 ? 'medium' : _ref$width,
      _ref$isHeadingMultili = _ref.isHeadingMultiline,
      isHeadingMultiline = _ref$isHeadingMultili === void 0 ? true : _ref$isHeadingMultili,
      _ref$onClose = _ref.onClose,
      onClose = _ref$onClose === void 0 ? noop : _ref$onClose,
      stackIndexOverride = _ref.stackIndex,
      _ref$onStackChange = _ref.onStackChange,
      onStackChange = _ref$onStackChange === void 0 ? noop : _ref$onStackChange,
      children = _ref.children,
      props = _objectWithoutProperties(_ref, ["autoFocus", "scrollBehavior", "shouldCloseOnEscapePress", "shouldCloseOnOverlayClick", "isChromeless", "width", "isHeadingMultiline", "onClose", "stackIndex", "onStackChange", "children"]);

  var stackIndex = useModalStack({
    onStackChange: onStackChange
  });
  return /*#__PURE__*/React.createElement(Portal, {
    zIndex: layers.modal()
  }, /*#__PURE__*/React.createElement(Modal, _extends({}, props, {
    autoFocus: autoFocus,
    scrollBehavior: scrollBehavior,
    shouldCloseOnEscapePress: shouldCloseOnEscapePress,
    shouldCloseOnOverlayClick: shouldCloseOnOverlayClick,
    isChromeless: isChromeless,
    width: width,
    isHeadingMultiline: isHeadingMultiline,
    onClose: onClose,
    stackIndex: stackIndexOverride || stackIndex
  }), children));
}