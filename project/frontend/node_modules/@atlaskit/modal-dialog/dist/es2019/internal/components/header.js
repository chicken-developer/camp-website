/** @jsx jsx */
import React, { useMemo } from 'react';
import { jsx } from '@emotion/core';
import ErrorIcon from '@atlaskit/icon/glyph/error';
import WarningIcon from '@atlaskit/icon/glyph/warning';
import { getTitleIconStyles, getTitleTextStyles, headerStyles, titleStyles } from '../styles/content';

const TitleIcon = ({
  appearance,
  isHeadingMultiline
}) => {
  const titleIconStyles = useMemo(() => {
    return getTitleIconStyles({
      appearance,
      isHeadingMultiline
    });
  }, [appearance, isHeadingMultiline]);
  const Icon = appearance === 'danger' ? ErrorIcon : WarningIcon;
  return jsx("span", {
    css: titleIconStyles
  }, jsx(Icon, {
    label: `${appearance} icon`
  }));
};

export default function ModalHeader(props) {
  const {
    id,
    appearance,
    component,
    heading,
    onClose,
    testId,
    isHeadingMultiline = true
  } = props;
  const warning = 'You can provide `component` OR `heading`, not both.';
  const titleTextStyles = useMemo(() => {
    return getTitleTextStyles(isHeadingMultiline);
  }, [isHeadingMultiline]);

  if (!component && !heading) {
    return null;
  }

  if (component && heading) {
    console.warn(warning); // eslint-disable-line no-console

    return null;
  }

  if (component) {
    return /*#__PURE__*/React.createElement(component, {
      id,
      testId,
      appearance,
      onClose,
      isHeadingMultiline
    });
  }

  return jsx("div", {
    css: headerStyles,
    "data-testid": testId && `${testId}--header`
  }, jsx("h1", {
    css: titleStyles
  }, appearance && jsx(TitleIcon, {
    appearance: appearance,
    isHeadingMultiline: isHeadingMultiline
  }), jsx("span", {
    id: id,
    css: titleTextStyles,
    "data-testid": testId && `${testId}-heading`
  }, heading)));
}